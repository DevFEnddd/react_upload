{"ast":null,"code":"import _regeneratorRuntime from \"F:/PM/oiron_v101/oiron/packages/crypto-theme/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:/PM/oiron_v101/oiron/packages/crypto-theme/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"F:\\\\PM\\\\oiron_v101\\\\oiron\\\\packages\\\\crypto-theme\\\\components\\\\Header\\\\TopNav\\\\UserMenu.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { withTranslation } from \"../../../i18n\";\nimport Settings from './Settings';\nimport useStyles from '../header-style';\nimport link from \"../../../public/text/link\";\n\nfunction UserMenu(props) {\n  _s();\n\n  var classes = useStyles();\n  var theme = useTheme();\n  var onToggleDark = props.onToggleDark,\n      onToggleDir = props.onToggleDir,\n      t = props.t;\n  var isDesktop = useMediaQuery(theme.breakpoints.up('sm'));\n  return __jsx(\"div\", {\n    className: classes.userMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, isDesktop && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    href: link.crypto.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, t('common:login')), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    href: link.crypto.register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, t('common:register')), __jsx(\"span\", {\n    className: classes.vDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  })), __jsx(Settings, {\n    toggleDark: onToggleDark,\n    toggleDir: onToggleDir,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(UserMenu, \"Hu6wY2lD9RXVdiUkdVrs/git5qs=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = UserMenu;\nUserMenu.propTypes = {\n  t: PropTypes.func.isRequired,\n  onToggleDark: PropTypes.func.isRequired,\n  onToggleDir: PropTypes.func.isRequired\n};\nUserMenu.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            namespacesRequired: ['common']\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default withTranslation(['common'])(UserMenu);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserMenu\");","map":{"version":3,"sources":["F:/PM/oiron_v101/oiron/packages/crypto-theme/components/Header/TopNav/UserMenu.js"],"names":["React","PropTypes","Button","useMediaQuery","useTheme","withTranslation","Settings","useStyles","link","UserMenu","props","classes","theme","onToggleDark","onToggleDir","t","isDesktop","breakpoints","up","userMenu","crypto","login","register","vDivider","propTypes","func","isRequired","getInitialProps","namespacesRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,MAAMK,KAAK,GAAGR,QAAQ,EAAtB;AAFuB,MAGfS,YAHe,GAGkBH,KAHlB,CAGfG,YAHe;AAAA,MAGDC,WAHC,GAGkBJ,KAHlB,CAGDI,WAHC;AAAA,MAGYC,CAHZ,GAGkBL,KAHlB,CAGYK,CAHZ;AAIvB,MAAMC,SAAS,GAAGb,aAAa,CAACS,KAAK,CAACK,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,CAA/B;AACA,SACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACQ,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,SAAS,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAER,IAAI,CAACY,MAAL,CAAYC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCN,CAAC,CAAC,cAAD,CAAnC,CADF,EAEE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,IAAI,EAAEP,IAAI,CAACY,MAAL,CAAYE,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyEP,CAAC,CAAC,iBAAD,CAA1E,CAFF,EAGE;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACY,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFJ,EAQE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAEV,YAAtB;AAAoC,IAAA,SAAS,EAAEC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD;;GAjBQL,Q;UACSF,S,EACFH,Q,EAEID,a;;;KAJXM,Q;AAmBTA,QAAQ,CAACe,SAAT,GAAqB;AACnBT,EAAAA,CAAC,EAAEd,SAAS,CAACwB,IAAV,CAAeC,UADC;AAEnBb,EAAAA,YAAY,EAAEZ,SAAS,CAACwB,IAAV,CAAeC,UAFV;AAGnBZ,EAAAA,WAAW,EAAEb,SAAS,CAACwB,IAAV,CAAeC;AAHT,CAArB;AAMAjB,QAAQ,CAACkB,eAAT,yEAA2B;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAa;AACtCC,YAAAA,kBAAkB,EAAE,CAAC,QAAD;AADkB,WAAb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;AAIA,eAAevB,eAAe,CAAC,CAAC,QAAD,CAAD,CAAf,CAA4BI,QAA5B,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { withTranslation } from '~/i18n';\nimport Settings from './Settings';\nimport useStyles from '../header-style';\nimport link from '~/public/text/link';\n\nfunction UserMenu(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { onToggleDark, onToggleDir, t } = props;\n  const isDesktop = useMediaQuery(theme.breakpoints.up('sm'));\n  return (\n    <div className={classes.userMenu}>\n      { isDesktop && (\n        <div>\n          <Button href={link.crypto.login}>{t('common:login')}</Button>\n          <Button variant=\"contained\" color=\"primary\" href={link.crypto.register}>{t('common:register')}</Button>\n          <span className={classes.vDivider} />\n        </div>\n      )}\n      <Settings toggleDark={onToggleDark} toggleDir={onToggleDir} />\n    </div>\n  );\n}\n\nUserMenu.propTypes = {\n  t: PropTypes.func.isRequired,\n  onToggleDark: PropTypes.func.isRequired,\n  onToggleDir: PropTypes.func.isRequired\n};\n\nUserMenu.getInitialProps = async () => ({\n  namespacesRequired: ['common'],\n});\n\nexport default withTranslation(['common'])(UserMenu);\n"]},"metadata":{},"sourceType":"module"}