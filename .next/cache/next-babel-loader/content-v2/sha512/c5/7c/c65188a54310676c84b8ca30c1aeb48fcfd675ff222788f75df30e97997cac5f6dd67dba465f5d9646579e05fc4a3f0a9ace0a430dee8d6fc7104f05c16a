{"ast":null,"code":"import _defineProperty from \"F:/PM/oiron_v101/oiron/packages/crypto-theme/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"F:\\\\PM\\\\oiron_v101\\\\oiron\\\\packages\\\\crypto-theme\\\\components\\\\Forms\\\\Register.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { withTranslation } from \"../../i18n\";\nimport { useText } from \"../../theme/common\";\nimport Checkbox from './Checkbox';\nimport SocialAuth from './SocialAuth';\nimport AuthFrame from './AuthFrame';\nimport useStyles from './form-style';\n\nfunction Register(props) {\n  _s();\n\n  var classes = useStyles();\n  var text = useText();\n  var t = props.t;\n\n  var _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1]; // Media query\n\n\n  var theme = useTheme();\n  var isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  useEffect(function () {\n    ValidatorForm.addValidationRule('isPasswordMatch', function (value) {\n      if (value !== values.password) {\n        return false;\n      }\n\n      return true;\n    });\n    ValidatorForm.addValidationRule('isTruthy', function (value) {\n      return value;\n    });\n  });\n\n  var _useState2 = useState(false),\n      check = _useState2[0],\n      setCheck = _useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  var handleCheck = function handleCheck(event) {\n    setCheck(event.target.checked);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    console.log('data submited');\n  };\n\n  return __jsx(AuthFrame, {\n    title: t('common:register_subtitle'),\n    type: \"register\",\n    subtitle: t('common:auth_desc'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: isDesktop ? text.subtitle : clsx(text.title, text.textPrimary),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, t('common:login_create'))), __jsx(SocialAuth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: classes.separator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, t('common:register_or'))), __jsx(ValidatorForm, {\n    onError: function onError(errors) {\n      return console.log(errors);\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, __jsx(TextValidator, {\n    className: classes.input,\n    label: t('common:register_name'),\n    onChange: handleChange('name'),\n    name: \"name\",\n    variant: \"filled\",\n    fullWidth: true,\n    value: values.name,\n    validators: ['required'],\n    errorMessages: ['This field is required'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(TextValidator, {\n    className: classes.input,\n    fullWidth: true,\n    label: t('common:register_email'),\n    onChange: handleChange('email'),\n    name: \"email\",\n    variant: \"filled\",\n    value: values.email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['This field is required', 'Email is not valid'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(TextValidator, {\n    type: \"password\",\n    className: classes.input,\n    label: t('common:register_password'),\n    validators: ['required'],\n    fullWidth: true,\n    variant: \"filled\",\n    onChange: handleChange('password'),\n    errorMessages: ['This field is required'],\n    name: \"password\",\n    value: values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, __jsx(TextValidator, {\n    type: \"password\",\n    className: classes.input,\n    fullWidth: true,\n    variant: \"filled\",\n    label: t('common:register_confirm'),\n    validators: ['isPasswordMatch', 'required'],\n    errorMessages: ['Password mismatch', 'this field is required'],\n    onChange: handleChange('confirmPassword'),\n    name: \"confirm\",\n    value: values.confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    className: classes.btnArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      validators: ['isTruthy'],\n      errorMessages: \"This field is required\",\n      checked: check,\n      value: check,\n      onChange: function onChange(e) {\n        return handleCheck(e);\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }),\n    label: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, t('common:form_terms'), \"\\xA0\", __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, t('common:form_privacy'))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    className: classes.buttonLarge,\n    type: \"submit\",\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, t('common:continue'))))));\n}\n\n_s(Register, \"OX45gTc6jdXvnSZ+KyNxqRmW96c=\", false, function () {\n  return [useStyles, useText, useTheme, useMediaQuery];\n});\n\n_c = Register;\nRegister.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['common'])(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["F:/PM/oiron_v101/oiron/packages/crypto-theme/components/Forms/Register.js"],"names":["React","useState","useEffect","PropTypes","clsx","Button","useMediaQuery","useTheme","Typography","FormControlLabel","Grid","ValidatorForm","TextValidator","withTranslation","useText","Checkbox","SocialAuth","AuthFrame","useStyles","Register","props","classes","text","t","name","email","password","confirmPassword","values","setValues","theme","isDesktop","breakpoints","up","addValidationRule","value","check","setCheck","handleChange","event","target","handleCheck","checked","handleSubmit","console","log","head","subtitle","title","textPrimary","separator","errors","input","btnArea","e","buttonLarge","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { withTranslation } from '~/i18n';\nimport { useText } from '~/theme/common';\nimport Checkbox from './Checkbox';\nimport SocialAuth from './SocialAuth';\nimport AuthFrame from './AuthFrame';\nimport useStyles from './form-style';\n\nfunction Register(props) {\n  const classes = useStyles();\n  const text = useText();\n  const { t } = props;\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  // Media query\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n      if (value !== values.password) {\n        return false;\n      }\n      return true;\n    });\n    ValidatorForm.addValidationRule('isTruthy', value => value);\n  });\n\n  const [check, setCheck] = useState(false);\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleCheck = event => {\n    setCheck(event.target.checked);\n  };\n\n  const handleSubmit = () => {\n    console.log('data submited');\n  };\n\n  return (\n    <AuthFrame title={t('common:register_subtitle')} type=\"register\" subtitle={t('common:auth_desc')}>\n      <div>\n        <div className={classes.head}>\n          <h3 className={isDesktop ? text.subtitle : clsx(text.title, text.textPrimary)}>\n            {t('common:login_create')}\n          </h3>\n        </div>\n        <SocialAuth />\n        <div className={classes.separator}>\n          <Typography>{t('common:register_or')}</Typography>\n        </div>\n        <ValidatorForm\n          onError={errors => console.log(errors)}\n          onSubmit={handleSubmit}\n        >\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextValidator\n                className={classes.input}\n                label={t('common:register_name')}\n                onChange={handleChange('name')}\n                name=\"name\"\n                variant=\"filled\"\n                fullWidth\n                value={values.name}\n                validators={['required']}\n                errorMessages={['This field is required']}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextValidator\n                className={classes.input}\n                fullWidth\n                label={t('common:register_email')}\n                onChange={handleChange('email')}\n                name=\"email\"\n                variant=\"filled\"\n                value={values.email}\n                validators={['required', 'isEmail']}\n                errorMessages={['This field is required', 'Email is not valid']}\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextValidator\n                type=\"password\"\n                className={classes.input}\n                label={t('common:register_password')}\n                validators={['required']}\n                fullWidth\n                variant=\"filled\"\n                onChange={handleChange('password')}\n                errorMessages={['This field is required']}\n                name=\"password\"\n                value={values.password}\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextValidator\n                type=\"password\"\n                className={classes.input}\n                fullWidth\n                variant=\"filled\"\n                label={t('common:register_confirm')}\n                validators={['isPasswordMatch', 'required']}\n                errorMessages={['Password mismatch', 'this field is required']}\n                onChange={handleChange('confirmPassword')}\n                name=\"confirm\"\n                value={values.confirmPassword}\n              />\n            </Grid>\n          </Grid>\n          <div className={classes.btnArea}>\n            <FormControlLabel\n              control={(\n                <Checkbox\n                  validators={['isTruthy']}\n                  errorMessages=\"This field is required\"\n                  checked={check}\n                  value={check}\n                  onChange={(e) => handleCheck(e)}\n                  color=\"primary\"\n                />\n              )}\n              label={(\n                <span>\n                  {t('common:form_terms')}\n                  &nbsp;\n                  <a href=\"#\">\n                    {t('common:form_privacy')}\n                  </a>\n                </span>\n              )}\n            />\n            <Button\n              variant=\"contained\"\n              className={classes.buttonLarge}\n              type=\"submit\"\n              color=\"primary\"\n              size=\"large\"\n            >\n              {t('common:continue')}\n            </Button>\n          </div>\n        </ValidatorForm>\n      </div>\n    </AuthFrame>\n  );\n}\n\n\nRegister.propTypes = {\n  t: PropTypes.func.isRequired\n};\n\nexport default withTranslation(['common'])(Register);\n"]},"metadata":{},"sourceType":"module"}