{"ast":null,"code":"import _extends from \"F:/PM/oiron_v101/oiron/packages/crypto-theme/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"F:\\\\PM\\\\oiron_v101\\\\oiron\\\\packages\\\\crypto-theme\\\\components\\\\Header\\\\TopNav\\\\MegaMenu.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { i18n } from \"../../../i18n\";\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Icon from '@material-ui/core/Icon';\nimport useStyles from '../header-style';\n\nfunction MegaMenu(props) {\n  _s();\n\n  var _this = this;\n\n  var dataMenu = props.dataMenu,\n      open = props.open,\n      toggle = props.toggle;\n  var classes = useStyles();\n  var anchorRef = useRef(null);\n\n  var _useState = useState(null),\n      anchorEl = _useState[0],\n      setAnchorEl = _useState[1];\n\n  var _useState2 = useState(''),\n      curURL = _useState2[0],\n      setCurURL = _useState2[1];\n\n  var _useState3 = useState(''),\n      curOrigin = _useState3[0],\n      setCurOrigin = _useState3[1];\n\n  var _useState4 = useState(''),\n      langPath = _useState4[0],\n      setLangPath = _useState4[1];\n\n  var handleToggle = function handleToggle(id, event) {\n    setAnchorEl(event.currentTarget);\n    toggle(id);\n  };\n\n  useEffect(function () {\n    setCurURL(window.location.href);\n    setCurOrigin(window.location.origin);\n    setLangPath('/' + i18n.options.localeSubpaths[i18n.language]);\n  }, []);\n  return __jsx(\"ul\", {\n    className: classes.multiMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, dataMenu.map(function (item, index) {\n    return __jsx(\"li\", {\n      key: index.toString(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      onClick: function onClick(e) {\n        return handleToggle(item.id, e);\n      },\n      ref: anchorRef,\n      endIcon: __jsx(Icon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }\n      }, \"expand_more\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, item.name), __jsx(Popper, {\n      open: open[item.id] || false,\n      anchorEl: anchorEl,\n      disablePortal: false,\n      role: undefined,\n      transition: true,\n      className: classes.megaMenuRoot,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, function (_ref) {\n      var TransitionProps = _ref.TransitionProps,\n          placement = _ref.placement;\n      return __jsx(Fade, _extends({}, TransitionProps, {\n        style: {\n          width: '100%',\n          transformOrigin: placement === 'bottom' ? 'left top' : 'left bottom'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }), __jsx(Paper, {\n        className: classes.megaMenu,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, __jsx(Container, {\n        maxWidth: \"md\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 23\n        }\n      }, item.child.map(function (subitem, childIndex) {\n        return __jsx(Grid, {\n          item: true,\n          sm: 3,\n          key: childIndex.toString(),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 27\n          }\n        }, __jsx(ListSubheader, {\n          disableSticky: true,\n          component: \"div\",\n          classes: {\n            root: classes.titleMega\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }\n        }, subitem.name), __jsx(\"img\", {\n          src: subitem.thumb,\n          alt: \"thumbnail\",\n          className: classes.thumbMenu,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }\n        }), __jsx(List, {\n          component: \"div\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }\n        }, subitem.child.map(function (granditem, grandChildIndex) {\n          return __jsx(ListItem, {\n            key: grandChildIndex.toString(),\n            button: true,\n            className: classes.menuItem,\n            component: \"a\",\n            href: granditem.link,\n            selected: curURL === curOrigin + langPath + granditem.link,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }\n          }, __jsx(ListItemText, {\n            primary: granditem.name,\n            classes: {\n              primary: classes.menuList\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 35\n            }\n          }));\n        })));\n      })))));\n    })));\n  }));\n}\n\n_s(MegaMenu, \"hADZZ3ywrcgHjqO1YCLQ0s0FwAg=\", false, function () {\n  return [useStyles];\n});\n\n_c = MegaMenu;\nMegaMenu.propTypes = {\n  dataMenu: PropTypes.array.isRequired,\n  toggle: PropTypes.func.isRequired,\n  open: PropTypes.object.isRequired\n};\nexport default MegaMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MegaMenu\");","map":{"version":3,"sources":["F:/PM/oiron_v101/oiron/packages/crypto-theme/components/Header/TopNav/MegaMenu.js"],"names":["React","useState","useRef","useEffect","PropTypes","i18n","Container","Button","Grid","Fade","Paper","Popper","List","ListItem","ListItemText","ListSubheader","Icon","useStyles","MegaMenu","props","dataMenu","open","toggle","classes","anchorRef","anchorEl","setAnchorEl","curURL","setCurURL","curOrigin","setCurOrigin","langPath","setLangPath","handleToggle","id","event","currentTarget","window","location","href","origin","options","localeSubpaths","language","multiMenu","map","item","index","toString","e","name","undefined","megaMenuRoot","TransitionProps","placement","width","transformOrigin","megaMenu","child","subitem","childIndex","root","titleMega","thumb","thumbMenu","granditem","grandChildIndex","menuItem","link","primary","menuList","propTypes","array","isRequired","func","object"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useRef,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { i18n } from '~/i18n';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Icon from '@material-ui/core/Icon';\nimport useStyles from '../header-style';\n\nfunction MegaMenu(props) {\n  const {\n    dataMenu,\n    open,\n    toggle\n  } = props;\n  const classes = useStyles();\n\n  const anchorRef = useRef(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [curURL, setCurURL] = useState('');\n  const [curOrigin, setCurOrigin] = useState('');\n  const [langPath, setLangPath] = useState('');\n\n  const handleToggle = (id, event) => {\n    setAnchorEl(event.currentTarget);\n    toggle(id);\n  };\n\n  useEffect(() => {\n    setCurURL(window.location.href);\n    setCurOrigin(window.location.origin);\n    setLangPath('/' + i18n.options.localeSubpaths[i18n.language]);\n  }, []);\n\n  return (\n    <ul className={classes.multiMenu}>\n      {dataMenu.map((item, index) => (\n        <li key={index.toString()}>\n          <div>\n            <Button\n              onClick={(e) => handleToggle(item.id, e)}\n              ref={anchorRef}\n              endIcon={<Icon>expand_more</Icon>}\n            >\n              {item.name}\n            </Button>\n            <Popper\n              open={open[item.id] || false}\n              anchorEl={anchorEl}\n              disablePortal={false}\n              role={undefined}\n              transition\n              className={classes.megaMenuRoot}\n            >\n              {({ TransitionProps, placement }) => (\n                <Fade\n                  {...TransitionProps}\n                  style={{ width: '100%', transformOrigin: placement === 'bottom' ? 'left top' : 'left bottom' }}\n                >\n                  <Paper className={classes.megaMenu}>\n                    <Container maxWidth=\"md\">\n                      <Grid container spacing={1}>\n                        {item.child.map((subitem, childIndex) => (\n                          <Grid item sm={3} key={childIndex.toString()}>\n                            <ListSubheader\n                              disableSticky\n                              component=\"div\"\n                              classes={{\n                                root: classes.titleMega\n                              }}\n                            >\n                              {subitem.name}\n                            </ListSubheader>\n                            <img src={subitem.thumb} alt=\"thumbnail\" className={classes.thumbMenu} />\n                            <List component=\"div\">\n                              {subitem.child.map((granditem, grandChildIndex) => (\n                                <ListItem\n                                  key={grandChildIndex.toString()}\n                                  button\n                                  className={classes.menuItem}\n                                  component=\"a\"\n                                  href={granditem.link}\n                                  selected={curURL === (curOrigin + langPath + granditem.link)}\n                                >\n                                  <ListItemText\n                                    primary={granditem.name}\n                                    classes={{\n                                      primary: classes.menuList\n                                    }}\n                                  />\n                                </ListItem>\n                              ))}\n                            </List>\n                          </Grid>\n                        ))}\n                      </Grid>\n                    </Container>\n                  </Paper>\n                </Fade>\n              )}\n            </Popper>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMegaMenu.propTypes = {\n  dataMenu: PropTypes.array.isRequired,\n  toggle: PropTypes.func.isRequired,\n  open: PropTypes.object.isRequired\n};\n\nexport default MegaMenu;\n"]},"metadata":{},"sourceType":"module"}