{"ast":null,"code":"import _defineProperty from \"F:/PM/oiron_v101/oiron/packages/crypto-theme/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"F:\\\\PM\\\\oiron_v101\\\\oiron\\\\packages\\\\crypto-theme\\\\components\\\\Forms\\\\Login.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { withTranslation } from \"../../i18n\";\nimport { useText } from \"../../theme/common\";\nimport SocialAuth from './SocialAuth';\nimport AuthFrame from './AuthFrame';\nimport useStyles from './form-style';\n\nfunction Login(props) {\n  _s();\n\n  var classes = useStyles();\n  var text = useText();\n  var t = props.t;\n\n  var _useState = useState({\n    email: '',\n    password: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1]; // Media query\n\n\n  var theme = useTheme();\n  var isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  useEffect(function () {\n    ValidatorForm.addValidationRule('isPasswordMatch', function (value) {\n      if (value !== values.password) {\n        return false;\n      }\n\n      return true;\n    });\n  });\n\n  var _useState2 = useState(false),\n      check = _useState2[0],\n      setCheck = _useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  var handleCheck = function handleCheck(event) {\n    setCheck(event.target.checked);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    console.log('data submited');\n  };\n\n  return __jsx(AuthFrame, {\n    title: t('common:login_subtitle'),\n    type: \"login\",\n    subtitle: t('common:auth_desc'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: isDesktop ? text.subtitle : clsx(text.title, text.textPrimary),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, t('common:login_title'))), __jsx(SocialAuth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: classes.separator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, t('common:login_or'))), __jsx(ValidatorForm, {\n    onError: function onError(errors) {\n      return console.log(errors);\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(TextValidator, {\n    className: classes.input,\n    label: t('common:login_email'),\n    onChange: handleChange('email'),\n    fullWidth: true,\n    variant: \"filled\",\n    name: \"email\",\n    value: values.email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['This field is required', 'Email is not valid'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(TextValidator, {\n    type: \"password\",\n    fullWidth: true,\n    className: classes.input,\n    label: t('common:login_password'),\n    validators: ['required'],\n    variant: \"filled\",\n    onChange: handleChange('password'),\n    errorMessages: ['This field is required'],\n    name: \"password\",\n    value: values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    className: classes.formHelper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: check,\n      onChange: function onChange(e) {\n        return handleCheck(e);\n      },\n      color: \"secondary\",\n      value: check,\n      className: classes.check,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }),\n    label: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, t('common:login_remember')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    size: \"small\",\n    className: classes.buttonLink,\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, t('common:login_forgot'))), __jsx(\"div\", {\n    className: classes.btnArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    fullWidth: true,\n    type: \"submit\",\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, t('common:continue'))))));\n}\n\n_s(Login, \"Ev0cPiPWG0WeZN3HBpB0WJs86Js=\", false, function () {\n  return [useStyles, useText, useTheme, useMediaQuery];\n});\n\n_c = Login;\nLogin.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['common'])(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["F:/PM/oiron_v101/oiron/packages/crypto-theme/components/Forms/Login.js"],"names":["React","useState","useEffect","PropTypes","clsx","Button","useMediaQuery","useTheme","Typography","FormControlLabel","Checkbox","Grid","ValidatorForm","TextValidator","withTranslation","useText","SocialAuth","AuthFrame","useStyles","Login","props","classes","text","t","email","password","values","setValues","theme","isDesktop","breakpoints","up","addValidationRule","value","check","setCheck","handleChange","name","event","target","handleCheck","checked","handleSubmit","console","log","head","subtitle","title","textPrimary","separator","errors","input","formHelper","e","buttonLink","btnArea","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { withTranslation } from '~/i18n';\nimport { useText } from '~/theme/common';\nimport SocialAuth from './SocialAuth';\nimport AuthFrame from './AuthFrame';\nimport useStyles from './form-style';\n\nfunction Login(props) {\n  const classes = useStyles();\n  const text = useText();\n  const { t } = props;\n  const [values, setValues] = useState({\n    email: '',\n    password: '',\n  });\n  // Media query\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n      if (value !== values.password) {\n        return false;\n      }\n      return true;\n    });\n  });\n\n  const [check, setCheck] = useState(false);\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleCheck = event => {\n    setCheck(event.target.checked);\n  };\n\n  const handleSubmit = () => {\n    console.log('data submited');\n  };\n\n  return (\n    <AuthFrame title={t('common:login_subtitle')} type=\"login\" subtitle={t('common:auth_desc')}>\n      <div>\n        <div className={classes.head}>\n          <h3 className={isDesktop ? text.subtitle : clsx(text.title, text.textPrimary)}>\n            {t('common:login_title')}\n          </h3>\n        </div>\n        <SocialAuth />\n        <div className={classes.separator}>\n          <Typography>\n            {t('common:login_or')}\n          </Typography>\n        </div>\n        <ValidatorForm\n          onError={errors => console.log(errors)}\n          onSubmit={handleSubmit}\n        >\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextValidator\n                className={classes.input}\n                label={t('common:login_email')}\n                onChange={handleChange('email')}\n                fullWidth\n                variant=\"filled\"\n                name=\"email\"\n                value={values.email}\n                validators={['required', 'isEmail']}\n                errorMessages={['This field is required', 'Email is not valid']}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextValidator\n                type=\"password\"\n                fullWidth\n                className={classes.input}\n                label={t('common:login_password')}\n                validators={['required']}\n                variant=\"filled\"\n                onChange={handleChange('password')}\n                errorMessages={['This field is required']}\n                name=\"password\"\n                value={values.password}\n              />\n            </Grid>\n          </Grid>\n          <div className={classes.formHelper}>\n            <FormControlLabel\n              control={(\n                <Checkbox\n                  checked={check}\n                  onChange={(e) => handleCheck(e)}\n                  color=\"secondary\"\n                  value={check}\n                  className={classes.check}\n                />\n              )}\n              label={(\n                <span>\n                  {t('common:login_remember')}\n                </span>\n              )}\n            />\n            <Button size=\"small\" className={classes.buttonLink} href=\"#\">\n              {t('common:login_forgot')}\n            </Button>\n          </div>\n          <div className={classes.btnArea}>\n            <Button variant=\"contained\" fullWidth type=\"submit\" color=\"primary\" size=\"large\">\n              {t('common:continue')}\n            </Button>\n          </div>\n        </ValidatorForm>\n      </div>\n    </AuthFrame>\n  );\n}\n\n\nLogin.propTypes = {\n  t: PropTypes.func.isRequired\n};\n\nexport default withTranslation(['common'])(Login);\n"]},"metadata":{},"sourceType":"module"}