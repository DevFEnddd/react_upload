{"ast":null,"code":"var _jsxFileName = \"F:\\\\PM\\\\oiron_v101\\\\oiron\\\\packages\\\\crypto-theme\\\\components\\\\Header\\\\Basic.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Logo from '../Logo';\nimport link from \"../../public/text/link\";\nimport Settings from './TopNav/Settings';\nimport useStyles from './header-style';\n\nfunction Basic(props) {\n  const {\n    0: fixed,\n    1: setFixed\n  } = useState(false);\n  const classes = useStyles(); // Media QUery\n\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'));\n  const {\n    onToggleDark,\n    onToggleDir,\n    text,\n    href,\n    home\n  } = props;\n  let flagFixed = false;\n\n  const handleScroll = () => {\n    const doc = document.documentElement;\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    const newFlagFixed = scroll > 80;\n\n    if (flagFixed !== newFlagFixed) {\n      setFixed(newFlagFixed);\n      flagFixed = newFlagFixed;\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n  }, []);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(AppBar, {\n    position: \"relative\",\n    id: \"header\",\n    className: clsx(classes.header, fixed && classes.fixed, home && classes.market),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    fixed: isDesktop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.headerContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(\"nav\", {\n    className: clsx(classes.navMenu, classes.flex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    href: link.crypto.home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, __jsx(Logo, {\n    type: \"landscape\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  })))), __jsx(\"nav\", {\n    className: classes.userMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    href: href,\n    color: \"secondary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, text), isDesktop && __jsx(\"span\", {\n    className: classes.vDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 30\n    }\n  }), __jsx(Settings, {\n    toggleDark: onToggleDark,\n    toggleDir: onToggleDir,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nBasic.propTypes = {\n  onToggleDark: PropTypes.func.isRequired,\n  onToggleDir: PropTypes.func.isRequired,\n  home: PropTypes.bool,\n  href: PropTypes.string,\n  text: PropTypes.string\n};\nBasic.defaultProps = {\n  home: false,\n  href: '/',\n  text: 'login'\n};\nexport default Basic;","map":{"version":3,"sources":["F:/PM/oiron_v101/oiron/packages/crypto-theme/components/Header/Basic.js"],"names":["React","useState","useEffect","Fragment","PropTypes","AppBar","clsx","Button","Container","useMediaQuery","useTheme","Logo","link","Settings","useStyles","Basic","props","fixed","setFixed","classes","theme","isDesktop","breakpoints","up","onToggleDark","onToggleDir","text","href","home","flagFixed","handleScroll","doc","document","documentElement","scroll","window","pageYOffset","scrollTop","clientTop","newFlagFixed","addEventListener","header","market","headerContent","navMenu","flex","logo","crypto","userMenu","vDivider","propTypes","func","isRequired","bool","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Logo from '../Logo';\nimport link from '~/public/text/link';\nimport Settings from './TopNav/Settings';\nimport useStyles from './header-style';\n\nfunction Basic(props) {\n  const [fixed, setFixed] = useState(false);\n  const classes = useStyles();\n  // Media QUery\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const {\n    onToggleDark,\n    onToggleDir,\n    text,\n    href,\n    home\n  } = props;\n  let flagFixed = false;\n\n  const handleScroll = () => {\n    const doc = document.documentElement;\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    const newFlagFixed = (scroll > 80);\n    if (flagFixed !== newFlagFixed) {\n      setFixed(newFlagFixed);\n      flagFixed = newFlagFixed;\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n  }, []);\n\n  return (\n    <Fragment>\n      <AppBar\n        position=\"relative\"\n        id=\"header\"\n        className={clsx(\n          classes.header,\n          fixed && classes.fixed,\n          home && classes.market\n        )}\n      >\n        <Container fixed={isDesktop}>\n          <div className={classes.headerContent}>\n            <nav className={clsx(classes.navMenu, classes.flex)}>\n              <div className={classes.logo}>\n                <a href={link.crypto.home}>\n                  <Logo type=\"landscape\" />\n                </a>\n              </div>\n            </nav>\n            <nav className={classes.userMenu}>\n              <Button href={href} color=\"secondary\" variant=\"contained\">{text}</Button>\n              { isDesktop && <span className={classes.vDivider} /> }\n              <Settings toggleDark={onToggleDark} toggleDir={onToggleDir} />\n            </nav>\n          </div>\n        </Container>\n      </AppBar>\n    </Fragment>\n  );\n}\n\nBasic.propTypes = {\n  onToggleDark: PropTypes.func.isRequired,\n  onToggleDir: PropTypes.func.isRequired,\n  home: PropTypes.bool,\n  href: PropTypes.string,\n  text: PropTypes.string\n};\n\nBasic.defaultProps = {\n  home: false,\n  href: '/',\n  text: 'login'\n};\n\nexport default Basic;\n"]},"metadata":{},"sourceType":"module"}