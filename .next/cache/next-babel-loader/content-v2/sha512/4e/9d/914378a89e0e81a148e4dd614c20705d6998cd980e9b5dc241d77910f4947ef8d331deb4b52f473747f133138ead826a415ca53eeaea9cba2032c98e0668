{"ast":null,"code":"var _jsxFileName = \"F:\\\\PM\\\\oiron_v101\\\\oiron\\\\packages\\\\crypto-theme\\\\components\\\\Header\\\\TopNav\\\\SingleNav.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport Scrollspy from 'react-scrollspy';\nimport { withTranslation } from \"../../../i18n\";\nimport useStyles from '../header-style';\nimport navMenu from '../data/single';\nconst LinkBtn = /*#__PURE__*/React.forwardRef(function LinkBtn(props, ref) {\n  // eslint-disable-line\n  return __jsx(AnchorLink, _extends({\n    to: props.to\n  }, props, {\n    innerRef: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  })); // eslint-disable-line\n});\n\nfunction MixedNav(props) {\n  const classes = useStyles();\n  const {\n    menuPrimary,\n    singleNav,\n    t\n  } = props;\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Scrollspy, {\n    items: navMenu,\n    currentClassName: \"active\",\n    className: classes.scrollActiveNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, menuPrimary.map(item => __jsx(\"li\", {\n    key: item.id.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, singleNav ? __jsx(Button, {\n    component: AnchorLink,\n    href: item.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, t('crypto-landing:header_' + item.name)) : __jsx(Button, {\n    href: '/' + item.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, t('crypto-landing:header_' + item.name)))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    href: \"#!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, t('common:header_sample_page')))));\n}\n\nMixedNav.propTypes = {\n  menuPrimary: PropTypes.array.isRequired,\n  singleNav: PropTypes.bool,\n  t: PropTypes.func.isRequired\n};\nMixedNav.defaultProps = {\n  singleNav: false\n};\n\nMixedNav.getInitialProps = async () => ({\n  namespacesRequired: ['common', 'crypto-landing']\n});\n\nexport default withTranslation(['common', 'crypto-landing'])(MixedNav);","map":{"version":3,"sources":["F:/PM/oiron_v101/oiron/packages/crypto-theme/components/Header/TopNav/SingleNav.js"],"names":["React","Fragment","PropTypes","Button","AnchorLink","Scrollspy","withTranslation","useStyles","navMenu","LinkBtn","forwardRef","props","ref","to","MixedNav","classes","menuPrimary","singleNav","t","scrollActiveNav","map","item","id","toString","url","name","propTypes","array","isRequired","bool","func","defaultProps","getInitialProps","namespacesRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,MAAMC,OAAO,gBAAGT,KAAK,CAACU,UAAN,CAAiB,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,GAAxB,EAA6B;AAAE;AAC9D,SAAO,MAAC,UAAD;AAAY,IAAA,EAAE,EAAED,KAAK,CAACE;AAAtB,KAA8BF,KAA9B;AAAqC,IAAA,QAAQ,EAAEC,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP,CAD4D,CACG;AAChE,CAFe,CAAhB;;AAIA,SAASE,QAAT,CAAkBH,KAAlB,EAAyB;AACvB,QAAMI,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM;AACJS,IAAAA,WADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA;AAHI,MAIFP,KAJJ;AAMA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEH,OADT;AAEE,IAAA,gBAAgB,EAAC,QAFnB;AAGE,IAAA,SAAS,EAAEO,OAAO,CAACI,eAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGH,WAAW,CAACI,GAAZ,CAAgBC,IAAI,IACnB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,SAAS,GACR,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEb,UAAnB;AAA+B,IAAA,IAAI,EAAEiB,IAAI,CAACG,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,CAAC,CAAC,2BAA2BG,IAAI,CAACI,IAAjC,CADJ,CADQ,GAKR,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,MAAMJ,IAAI,CAACG,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,CAAC,CAAC,2BAA2BG,IAAI,CAACI,IAAjC,CADJ,CANJ,CADD,CALH,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,CAAC,CAAC,2BAAD,CADJ,CADF,CAlBF,CADF,CADF;AA4BD;;AAEDJ,QAAQ,CAACY,SAAT,GAAqB;AACnBV,EAAAA,WAAW,EAAEd,SAAS,CAACyB,KAAV,CAAgBC,UADV;AAEnBX,EAAAA,SAAS,EAAEf,SAAS,CAAC2B,IAFF;AAGnBX,EAAAA,CAAC,EAAEhB,SAAS,CAAC4B,IAAV,CAAeF;AAHC,CAArB;AAMAd,QAAQ,CAACiB,YAAT,GAAwB;AACtBd,EAAAA,SAAS,EAAE;AADW,CAAxB;;AAIAH,QAAQ,CAACkB,eAAT,GAA2B,aAAa;AACtCC,EAAAA,kBAAkB,EAAE,CAAC,QAAD,EAAW,gBAAX;AADkB,CAAb,CAA3B;;AAIA,eAAe3B,eAAe,CAAC,CAAC,QAAD,EAAW,gBAAX,CAAD,CAAf,CAA8CQ,QAA9C,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport Scrollspy from 'react-scrollspy';\nimport { withTranslation } from '~/i18n';\nimport useStyles from '../header-style';\nimport navMenu from '../data/single';\n\nconst LinkBtn = React.forwardRef(function LinkBtn(props, ref) { // eslint-disable-line\n  return <AnchorLink to={props.to} {...props} innerRef={ref} />; // eslint-disable-line\n});\n\nfunction MixedNav(props) {\n  const classes = useStyles();\n  const {\n    menuPrimary,\n    singleNav,\n    t\n  } = props;\n\n  return (\n    <Fragment>\n      <Scrollspy\n        items={navMenu}\n        currentClassName=\"active\"\n        className={classes.scrollActiveNav}\n      >\n        {menuPrimary.map(item => (\n          <li key={item.id.toString()}>\n            {singleNav ? (\n              <Button component={AnchorLink} href={item.url}>\n                {t('crypto-landing:header_' + item.name)}\n              </Button>\n            ) : (\n              <Button href={'/' + item.url}>\n                {t('crypto-landing:header_' + item.name)}\n              </Button>\n            )}\n          </li>\n        ))}\n        <li>\n          <Button href=\"#!\">\n            {t('common:header_sample_page')}\n          </Button>\n        </li>\n      </Scrollspy>\n    </Fragment>\n  );\n}\n\nMixedNav.propTypes = {\n  menuPrimary: PropTypes.array.isRequired,\n  singleNav: PropTypes.bool,\n  t: PropTypes.func.isRequired\n};\n\nMixedNav.defaultProps = {\n  singleNav: false\n};\n\nMixedNav.getInitialProps = async () => ({\n  namespacesRequired: ['common', 'crypto-landing'],\n});\n\nexport default withTranslation(['common', 'crypto-landing'])(MixedNav);\n"]},"metadata":{},"sourceType":"module"}