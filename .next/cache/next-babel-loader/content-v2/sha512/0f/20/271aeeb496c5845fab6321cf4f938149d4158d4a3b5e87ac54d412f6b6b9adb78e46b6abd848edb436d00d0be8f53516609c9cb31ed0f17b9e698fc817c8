{"ast":null,"code":"import _regeneratorRuntime from \"F:/PM/oiron_v101/oiron/packages/crypto-theme/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:/PM/oiron_v101/oiron/packages/crypto-theme/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"F:/PM/oiron_v101/oiron/packages/crypto-theme/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"F:\\\\PM\\\\oiron_v101\\\\oiron\\\\packages\\\\crypto-theme\\\\components\\\\Header\\\\TopNav\\\\MixedNav.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport Scrollspy from 'react-scrollspy';\nimport { withTranslation, i18n } from \"../../../i18n\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Icon from '@material-ui/core/Icon';\nimport useStyles from '../header-style';\nimport navMenu from '../data/single';\nvar LinkBtn = /*#__PURE__*/React.forwardRef(_c = function LinkBtn(props, ref) {\n  // eslint-disable-line\n  return __jsx(AnchorLink, _extends({\n    to: props.to\n  }, props, {\n    innerRef: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  })); // eslint-disable-line\n});\n_c2 = LinkBtn;\n\nfunction MixedNav(props) {\n  _s();\n\n  var _this = this;\n\n  var menuPrimary = props.menuPrimary,\n      menuSecondary = props.menuSecondary,\n      open = props.open,\n      toggle = props.toggle,\n      close = props.close,\n      singleNav = props.singleNav,\n      t = props.t;\n  var classes = useStyles();\n  var anchorRef = useRef(null);\n\n  var _useState = useState(null),\n      anchorEl = _useState[0],\n      setAnchorEl = _useState[1];\n\n  var _useState2 = useState(''),\n      curURL = _useState2[0],\n      setCurURL = _useState2[1];\n\n  var _useState3 = useState(''),\n      curOrigin = _useState3[0],\n      setCurOrigin = _useState3[1];\n\n  var _useState4 = useState(''),\n      langPath = _useState4[0],\n      setLangPath = _useState4[1];\n\n  var handleToggle = function handleToggle(event) {\n    setAnchorEl(event.currentTarget);\n    toggle();\n  };\n\n  useEffect(function () {\n    setCurURL(window.location.href);\n    setCurOrigin(window.location.origin);\n    setLangPath('/' + i18n.options.localeSubpaths[i18n.language]);\n  }, []);\n  return __jsx(Scrollspy, {\n    items: navMenu,\n    currentClassName: \"active\",\n    className: classes.scrollActiveNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, menuPrimary.map(function (item) {\n    return __jsx(\"li\", {\n      key: item.id.toString(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, singleNav ? __jsx(Button, {\n      component: AnchorLink,\n      href: item.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, t('crypto-landing:header_' + item.name)) : __jsx(Button, {\n      href: '/' + item.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, t('crypto-landing:header_' + item.name)));\n  }), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: function onClick(e) {\n      return handleToggle(e);\n    },\n    ref: anchorRef,\n    endIcon: __jsx(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 20\n      }\n    }, \"expand_more\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, t('common:header_sample_page')), __jsx(Popper, {\n    open: open,\n    anchorEl: anchorEl,\n    disablePortal: false,\n    role: undefined,\n    transition: true,\n    className: classes.megaMenuRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, function (_ref) {\n    var TransitionProps = _ref.TransitionProps,\n        placement = _ref.placement;\n    return __jsx(Fade, _extends({}, TransitionProps, {\n      style: {\n        width: '100%',\n        transformOrigin: placement === 'bottom' ? 'left top' : 'left bottom'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }), __jsx(Paper, {\n      className: classes.megaMenu,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, __jsx(ClickAwayListener, {\n      onClickAway: close,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, __jsx(Container, {\n      maxWidth: \"md\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, menuSecondary.map(function (subitem, index) {\n      return __jsx(Grid, {\n        item: true,\n        sm: 3,\n        key: index.toString(),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, __jsx(ListSubheader, {\n        disableSticky: true,\n        component: \"div\",\n        className: classes.titleMega,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 27\n        }\n      }, subitem.name), __jsx(\"img\", {\n        src: subitem.thumb,\n        alt: \"thumbnail\",\n        className: classes.thumbMenu,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 27\n        }\n      }), __jsx(List, {\n        component: \"div\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 27\n        }\n      }, subitem.child.map(function (item, subIndex) {\n        return __jsx(ListItem, {\n          key: subIndex.toString(),\n          button: true,\n          component: \"a\",\n          href: item.link,\n          selected: curURL === curOrigin + langPath + item.link,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 31\n          }\n        }, __jsx(ListItemText, {\n          primary: t('common:header_' + item.name),\n          classes: {\n            primary: classes.menuList\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }\n        }));\n      })));\n    }))))));\n  })));\n}\n\n_s(MixedNav, \"hADZZ3ywrcgHjqO1YCLQ0s0FwAg=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = MixedNav;\nMixedNav.propTypes = {\n  menuPrimary: PropTypes.array.isRequired,\n  menuSecondary: PropTypes.array.isRequired,\n  close: PropTypes.func.isRequired,\n  toggle: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  singleNav: PropTypes.bool,\n  t: PropTypes.func.isRequired\n};\nMixedNav.defaultProps = {\n  singleNav: false\n};\nMixedNav.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            namespacesRequired: ['common', 'crypto-landing']\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default withTranslation(['common', 'crypto-landing'])(MixedNav);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LinkBtn$React.forwardRef\");\n$RefreshReg$(_c2, \"LinkBtn\");\n$RefreshReg$(_c3, \"MixedNav\");","map":{"version":3,"sources":["F:/PM/oiron_v101/oiron/packages/crypto-theme/components/Header/TopNav/MixedNav.js"],"names":["React","useState","useRef","useEffect","PropTypes","Container","Button","Grid","AnchorLink","ClickAwayListener","Fade","Paper","Popper","Scrollspy","withTranslation","i18n","List","ListItem","ListItemText","ListSubheader","Icon","useStyles","navMenu","LinkBtn","forwardRef","props","ref","to","MixedNav","menuPrimary","menuSecondary","open","toggle","close","singleNav","t","classes","anchorRef","anchorEl","setAnchorEl","curURL","setCurURL","curOrigin","setCurOrigin","langPath","setLangPath","handleToggle","event","currentTarget","window","location","href","origin","options","localeSubpaths","language","scrollActiveNav","map","item","id","toString","url","name","e","undefined","megaMenuRoot","TransitionProps","placement","width","transformOrigin","megaMenu","subitem","index","titleMega","thumb","thumbMenu","child","subIndex","link","primary","menuList","propTypes","array","isRequired","func","bool","defaultProps","getInitialProps","namespacesRequired"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useRef,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport Scrollspy from 'react-scrollspy';\nimport { withTranslation, i18n } from '~/i18n';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Icon from '@material-ui/core/Icon';\nimport useStyles from '../header-style';\nimport navMenu from '../data/single';\n\nconst LinkBtn = React.forwardRef(function LinkBtn(props, ref) { // eslint-disable-line\n  return <AnchorLink to={props.to} {...props} innerRef={ref} />; // eslint-disable-line\n});\n\nfunction MixedNav(props) {\n  const {\n    menuPrimary,\n    menuSecondary,\n    open,\n    toggle,\n    close,\n    singleNav,\n    t\n  } = props;\n  const classes = useStyles();\n\n  const anchorRef = useRef(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [curURL, setCurURL] = useState('');\n  const [curOrigin, setCurOrigin] = useState('');\n  const [langPath, setLangPath] = useState('');\n\n  const handleToggle = (event) => {\n    setAnchorEl(event.currentTarget);\n    toggle();\n  };\n\n  useEffect(() => {\n    setCurURL(window.location.href);\n    setCurOrigin(window.location.origin);\n    setLangPath('/' + i18n.options.localeSubpaths[i18n.language]);\n  }, []);\n\n  return (\n    <Scrollspy\n      items={navMenu}\n      currentClassName=\"active\"\n      className={classes.scrollActiveNav}\n    >\n      {menuPrimary.map(item => (\n        <li key={item.id.toString()}>\n          {singleNav ? (\n            <Button component={AnchorLink} href={item.url}>\n              {t('crypto-landing:header_' + item.name)}\n            </Button>\n          ) : (\n            <Button href={'/' + item.url}>\n              {t('crypto-landing:header_' + item.name)}\n            </Button>\n          )}\n        </li>\n      ))}\n      <li>\n        <Button\n          onClick={(e) => handleToggle(e)}\n          ref={anchorRef}\n          endIcon={<Icon>expand_more</Icon>}\n        >\n          {t('common:header_sample_page')}\n        </Button>\n        <Popper\n          open={open}\n          anchorEl={anchorEl}\n          disablePortal={false}\n          role={undefined}\n          transition\n          className={classes.megaMenuRoot}\n        >\n          {({ TransitionProps, placement }) => (\n            <Fade\n              {...TransitionProps}\n              style={{ width: '100%', transformOrigin: placement === 'bottom' ? 'left top' : 'left bottom' }}\n            >\n              <Paper className={classes.megaMenu}>\n                <ClickAwayListener onClickAway={close}>\n                  <Container maxWidth=\"md\">\n                    <Grid container spacing={1}>\n                      {menuSecondary.map((subitem, index) => (\n                        <Grid item sm={3} key={index.toString()}>\n                          <ListSubheader disableSticky component=\"div\" className={classes.titleMega}>\n                            {subitem.name}\n                          </ListSubheader>\n                          <img src={subitem.thumb} alt=\"thumbnail\" className={classes.thumbMenu} />\n                          <List component=\"div\">\n                            {subitem.child.map((item, subIndex) => (\n                              <ListItem\n                                key={subIndex.toString()}\n                                button\n                                component=\"a\"\n                                href={item.link}\n                                selected={curURL === (curOrigin + langPath + item.link)}\n                              >\n                                <ListItemText\n                                  primary={t('common:header_' + item.name)}\n                                  classes={{\n                                    primary: classes.menuList\n                                  }}\n                                />\n                              </ListItem>\n                            ))}\n                          </List>\n                        </Grid>\n                      ))}\n                    </Grid>\n                  </Container>\n                </ClickAwayListener>\n              </Paper>\n            </Fade>\n          )}\n        </Popper>\n      </li>\n    </Scrollspy>\n  );\n}\n\nMixedNav.propTypes = {\n  menuPrimary: PropTypes.array.isRequired,\n  menuSecondary: PropTypes.array.isRequired,\n  close: PropTypes.func.isRequired,\n  toggle: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  singleNav: PropTypes.bool,\n  t: PropTypes.func.isRequired\n};\n\nMixedNav.defaultProps = {\n  singleNav: false\n};\n\nMixedNav.getInitialProps = async () => ({\n  namespacesRequired: ['common', 'crypto-landing'],\n});\n\nexport default withTranslation(['common', 'crypto-landing'])(MixedNav);\n"]},"metadata":{},"sourceType":"module"}